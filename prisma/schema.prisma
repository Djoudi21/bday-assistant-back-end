// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contact {
  id                   Int                   @id @default(autoincrement())
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  name                 String                @db.VarChar(255)
  description          String
  birthday             DateTime
  userId               Int
  User                 User                  @relation(fields: [userId], references: [id])
  BirthdayNotification BirthdayNotification?
}

model User {
  id                   Int                   @id @default(autoincrement())
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  email                String                @unique
  password             String
  firstName            String
  lastName             String
  authToolUserId       String?               @unique
  contacts             Contact[]
  Token                Token[]
  BirthdayNotification BirthdayNotification?
}

model Token {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  token     String   @unique
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
}

model BirthdayNotification {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  toSendAt  DateTime
  message   String
  isSent    Boolean  @default(false)
  contact   Contact  @relation(fields: [contactId], references: [id])
  contactId Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}
